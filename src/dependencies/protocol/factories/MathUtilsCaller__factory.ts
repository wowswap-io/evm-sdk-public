/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MathUtilsCaller,
  MathUtilsCallerInterface,
} from "../MathUtilsCaller";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdateTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentTimestamp",
        type: "uint256",
      },
    ],
    name: "calculateCompoundedInterest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdateTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentTimestamp",
        type: "uint256",
      },
    ],
    name: "calculateCompoundedInterestConsumption",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "value",
        type: "int256",
      },
      {
        internalType: "uint64",
        name: "n",
        type: "uint64",
      },
    ],
    name: "rootN",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506109a5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063b458fb6d14610046578063bed53e2214610046578063fa123e4314610081575b600080fd5b61006f6004803603606081101561005c57600080fd5b50803590602081013590604001356100ae565b60408051918252519081900360200190f35b61006f6004803603604081101561009757600080fd5b508035906020013567ffffffffffffffff166100c5565b60006100bb8484846100e6565b90505b9392505050565b60006100dd83836100d6601b61018f565b9190610205565b90505b92915050565b6000806100f38385610249565b90508061010a5761010261028b565b9150506100be565b6000610116868361029b565b9050600061012c8261012661028b565b906102f4565b905060015b60058110156101845780841161014c575092506100be915050565b60018101610166896101608685890361029b565b9061034e565b8161016d57fe5b04925061017a82846102f4565b9150600101610131565b509695505050505050565b610197610923565b60248260ff16106101a457fe5b60ff808316808352600a90810a60208401526024849003909116900a806f020b85a438b48462e4212f98f0ebc9e2816101d957fe5b056040830152807040badf011b5fc35ab64f29c13ff3528d00816101f957fe5b05606083015250919050565b6000821561023f5761023a846102358661021f888861044a565b8667ffffffffffffffff16896020015102610689565b6106b9565b6100bb565b5060009392505050565b60006100dd83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610794565b6b033b2e3c9fd0803ce800000090565b6000826102aa575060006100e0565b828202828482816102b757fe5b04146100dd5760405162461bcd60e51b815260040180806020018281038252602181526020018061094f6021913960400191505060405180910390fd5b6000828201838110156100dd576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600082158061035b575081155b15610368575060006100e0565b816b019d971e4fe8401e74000000198161037e57fe5b04831115604051806040016040528060038152602001624d4d4f60e81b815250906104275760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156103ec5781810151838201526020016103d4565b50505050905090810190601f1680156104195780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50506b033b2e3c9fd0803ce800000091026b019d971e4fe8401e74000000010490565b600080821361045557fe5b825160009060240360ff8116600a0a5b600a86602001518161047357fe5b05851361049a5784600a0294506f01bb7635c5de48ef4ce5b7b41cc43db083039250610465565b8560200151600a0285126104c857600a850594506f01bb7635c5de48ef4ce5b7b41cc43db08301925061049a565b85602001518512156104fe576104e3868688604001516107ee565b94506ec097ce7bc90715b34b9f1000000000830392506104c8565b85604001518513156105345761051986868860400151610689565b94506ec097ce7bc90715b34b9f1000000000830192506104fe565b856020015185141561055e578061054c878585610867565b8161055357fe5b0593505050506100e0565b856040015185141561058e5780610576878585610867565b8161057d57fe5b0586602001510193505050506100e0565b6f0120e3b5b9ad8aa08cf16e97ffffffff19948102948501946e4e16f927cdca7f15b39123f740f5d193909301926000906f0120e3b5b9ad8aa08cf16e9800000000016ec097ce7bc90715b34b9f10000000008702816105ea57fe5b059050806002028401935060006ec097ce7bc90715b34b9f10000000008283028161061157fe5b05905060035b6ec097ce7bc90715b34b9f10000000008383020592508060ff16836002028161063c57fe5b0586019550600281019050886000015160020260030160ff168160ff161061066357610668565b610617565b836106748a8888610867565b8161067b57fe5b059998505050505050505050565b6000836020015182141561069e5750816100be565b816106a557fe5b6100bb84846106b487866108b9565b6107ee565b6000826020015160ac0282126106cb57fe5b60208301515b8360200151600a028312610701578360200151600a02830392506106fa848286606001516107ee565b90506106d1565b83602001518314156107245761071c848286604001516107ee565b9150506100e0565b826107305790506100e0565b60208401516064028060015b866000015160020260ff168160ff1611610773578060ff168760200151028683028161076457fe5b0592830192915060010161073c565b5061078a866107838885876107ee565b60026108ee565b9695505050505050565b600081848411156107e65760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156103ec5781810151838201526020016103d4565b505050900390565b600083602001518214156108035750816100be565b60008460200151848161081257fe5b60208701519190059150808202850390600090858161082d57fe5b602089015191900591508082028603908382028161084757fe5b0582840282860284878c6020015102020101019450505050509392505050565b600060ff8216600a0a6001828512156108865760001990508460000394505b6002820582868161089357fe5b07126108aa578185816108a257fe5b078286010394505b60000b84029150509392505050565b6000600a6108df848486602001518760200151600a0202816108d757fe5b056001610867565b816108e657fe5b059392505050565b6000808260ff16116109015750816100be565b8160ff16600a0a610913858585610867565b8161091a57fe5b05949350505050565b6040518060800160405280600060ff168152602001600081526020016000815260200160008152509056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220a81787b484abdd8e6453701cab3c9d590fbe98e3d338744e70bcd2c3d01ec5b164736f6c63430007040033";

export class MathUtilsCaller__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MathUtilsCaller> {
    return super.deploy(overrides || {}) as Promise<MathUtilsCaller>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MathUtilsCaller {
    return super.attach(address) as MathUtilsCaller;
  }
  connect(signer: Signer): MathUtilsCaller__factory {
    return super.connect(signer) as MathUtilsCaller__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MathUtilsCallerInterface {
    return new utils.Interface(_abi) as MathUtilsCallerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MathUtilsCaller {
    return new Contract(address, _abi, signerOrProvider) as MathUtilsCaller;
  }
}
