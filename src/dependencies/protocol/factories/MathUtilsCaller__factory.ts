/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MathUtilsCaller,
  MathUtilsCallerInterface,
} from "../MathUtilsCaller";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdateTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentTimestamp",
        type: "uint256",
      },
    ],
    name: "calculateCompoundedInterest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdateTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentTimestamp",
        type: "uint256",
      },
    ],
    name: "calculateCompoundedInterestConsumption",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103f1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063b458fb6d1461003b578063bed53e221461003b575b600080fd5b6100646004803603606081101561005157600080fd5b5080359060208101359060400135610076565b60408051918252519081900360200190f35b600061008384848461008d565b90505b9392505050565b60008061009a8385610136565b9050806100b1576100a9610181565b915050610086565b60006100bd8683610191565b905060006100d3826100cd610181565b906101ea565b905060015b600581101561012b578084116100f357509250610086915050565b6001810161010d8961010786858903610191565b90610244565b8161011457fe5b04925061012182846101ea565b91506001016100d8565b509695505050505050565b600061017883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610340565b90505b92915050565b6b033b2e3c9fd0803ce800000090565b6000826101a05750600061017b565b828202828482816101ad57fe5b04146101785760405162461bcd60e51b815260040180806020018281038252602181526020018061039b6021913960400191505060405180910390fd5b600082820183811015610178576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000821580610251575081155b1561025e5750600061017b565b816b019d971e4fe8401e74000000198161027457fe5b04831115604051806040016040528060038152602001624d4d4f60e81b8152509061031d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156102e25781810151838201526020016102ca565b50505050905090810190601f16801561030f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50506b033b2e3c9fd0803ce800000091026b019d971e4fe8401e74000000010490565b600081848411156103925760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156102e25781810151838201526020016102ca565b50505090039056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a26469706673582212201a7f1b60a6b54f9c7d409b9986655ab4194305ab496e73ff1de7145b1cb3251864736f6c63430007040033";

export class MathUtilsCaller__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MathUtilsCaller> {
    return super.deploy(overrides || {}) as Promise<MathUtilsCaller>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MathUtilsCaller {
    return super.attach(address) as MathUtilsCaller;
  }
  connect(signer: Signer): MathUtilsCaller__factory {
    return super.connect(signer) as MathUtilsCaller__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MathUtilsCallerInterface {
    return new utils.Interface(_abi) as MathUtilsCallerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MathUtilsCaller {
    return new Contract(address, _abi, signerOrProvider) as MathUtilsCaller;
  }
}
