/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DiaPriceFeed, DiaPriceFeedInterface } from "../DiaPriceFeed";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "oracle",
        type: "address",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "decimalRatio",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "lowerDecimals",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "sell",
        type: "bool",
      },
    ],
    name: "getAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "sell",
        type: "bool",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516106203803806106208339818101604052608081101561003357600080fd5b81516020830180516040519294929383019291908464010000000082111561005a57600080fd5b90830190602082018581111561006f57600080fd5b825164010000000081118282018810171561008957600080fd5b82525081516020918201929091019080838360005b838110156100b657818101518382015260200161009e565b50505050905090810190601f1680156100e35780820380516001836020036101000a031916815260200191505b5060409081526020828101519290910151600080546001600160a01b0319166001600160a01b0389161790558551929450925061012591600191860190610145565b506002919091556003805460ff1916911515919091179055506101e69050565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261017b57600085556101c1565b82601f1061019457805160ff19168380011785556101c1565b828001600101855582156101c1579182015b828111156101c15782518255916020019190600101906101a6565b506101cd9291506101d1565b5090565b5b808211156101cd57600081556001016101d2565b61042b806101f56000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806311106ee21461003b578063e245b5af14610072575b600080fd5b6100606004803603604081101561005157600080fd5b50803590602001351515610091565b60408051918252519081900360200190f35b6100606004803603602081101561008857600080fd5b503515156100b1565b60008061009d836100b1565b90506100a984826101d8565b949350505050565b600080546040516304b01c2560e51b8152602060048201908152600180546002600019828416156101000201909116046024840181905285946001600160a01b03169363960384a09391829160440190849080156101505780601f1061012557610100808354040283529160200191610150565b820191906000526020600020905b81548152906001019060200180831161013357829003601f168201915b505092505050604080518083038186803b15801561016d57600080fd5b505afa158015610181573d6000803e3d6000fd5b505050506040513d604081101561019757600080fd5b505190506101b66fffffffffffffffffffffffffffffffff82166102cd565b9150826101d2576101cf670de0b6b3a7640000836102f3565b91505b50919050565b60008215806101e5575081155b156101f2575060006102c7565b816706f05b59d3b20000198161020457fe5b04831115604051806040016040528060038152602001624d4d4f60e81b815250906102ad5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561027257818101518382015260200161025a565b50505050905090810190601f16801561029f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5050670de0b6b3a76400006706f05b59d3b2000082840201045b92915050565b60035460009060ff166102eb5760025482816102e557fe5b046102c7565b506002540290565b60408051808201909152600381526226a22d60e91b60208201526000908261035c5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561027257818101518382015260200161025a565b506040805180820190915260038152624d4d4f60e81b60208201526002830490670de0b6b3a76400008219048511156103d65760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561027257818101518382015260200161025a565b508281670de0b6b3a7640000860201816103ec57fe5b0494935050505056fea264697066735822122016d5ea3725953414c062656aee5e88aa91e6252e4e118d3e669e6a22ab0da3c464736f6c63430007040033";

export class DiaPriceFeed__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    oracle: string,
    key: string,
    decimalRatio: BigNumberish,
    lowerDecimals: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DiaPriceFeed> {
    return super.deploy(
      oracle,
      key,
      decimalRatio,
      lowerDecimals,
      overrides || {}
    ) as Promise<DiaPriceFeed>;
  }
  getDeployTransaction(
    oracle: string,
    key: string,
    decimalRatio: BigNumberish,
    lowerDecimals: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      oracle,
      key,
      decimalRatio,
      lowerDecimals,
      overrides || {}
    );
  }
  attach(address: string): DiaPriceFeed {
    return super.attach(address) as DiaPriceFeed;
  }
  connect(signer: Signer): DiaPriceFeed__factory {
    return super.connect(signer) as DiaPriceFeed__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiaPriceFeedInterface {
    return new utils.Interface(_abi) as DiaPriceFeedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiaPriceFeed {
    return new Contract(address, _abi, signerOrProvider) as DiaPriceFeed;
  }
}
