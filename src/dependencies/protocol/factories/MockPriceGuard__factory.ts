/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockPriceGuard,
  MockPriceGuardInterface,
} from "../MockPriceGuard";

const _abi = [
  {
    inputs: [],
    name: "destDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "getAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "getThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "srcDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102b0806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063960bfe041161005b578063960bfe04146100ee57806398d5fdca1461010b578063c6414eee14610113578063c78643f4146101365761007d565b80635c195217146100825780636140461c146100b157806391b7f5ed146100cf575b600080fd5b61009f6004803603602081101561009857600080fd5b503561013e565b60408051918252519081900360200190f35b6100b961015b565b6040805160ff9092168252519081900360200190f35b6100ec600480360360208110156100e557600080fd5b5035610169565b005b6100ec6004803603602081101561010457600080fd5b503561016e565b61009f610173565b61009f6004803603604081101561012957600080fd5b5080359060200135610179565b6100b9610181565b60006101556001548361018a90919063ffffffff16565b92915050565b600254610100900460ff1681565b600155565b600055565b60015490565b505060005490565b60025460ff1681565b6000821580610197575081155b156101a457506000610155565b816706f05b59d3b2000019816101b657fe5b04831115604051806040016040528060038152602001624d4d4f60e81b8152509061025f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561022457818101518382015260200161020c565b50505050905090810190601f1680156102515780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5050670de0b6b3a764000091026706f05b59d3b2000001049056fea2646970667358221220e5d0fa2b927ab9f8f0794e67f1ffbbc36ffc3e02fa40067d71f61d2cdb4a8de664736f6c63430007040033";

export class MockPriceGuard__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockPriceGuard> {
    return super.deploy(overrides || {}) as Promise<MockPriceGuard>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockPriceGuard {
    return super.attach(address) as MockPriceGuard;
  }
  connect(signer: Signer): MockPriceGuard__factory {
    return super.connect(signer) as MockPriceGuard__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockPriceGuardInterface {
    return new utils.Interface(_abi) as MockPriceGuardInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockPriceGuard {
    return new Contract(address, _abi, signerOrProvider) as MockPriceGuard;
  }
}
