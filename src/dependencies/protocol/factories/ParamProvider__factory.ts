/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ParamProvider, ParamProviderInterface } from "../ParamProvider";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "ACCURACY_DIVISOR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FEE_TOKEN",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REVISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WOW",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "activate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "baseBorrowRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deactivate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "excessSlope",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "expirationPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
    ],
    name: "getAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "guardedPriceSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "paramGovernance",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxLiquidationReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minPositionDeposit",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidationMargin",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidationReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxLeverageFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxLiquidationReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPriceThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxRateMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minPositionDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "leverageFactor",
        type: "uint256",
      },
    ],
    name: "minWOWBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "noDebtLeverageFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "optimalSlope",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "optimalUtilization",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "value",
        type: "address",
      },
    ],
    name: "overrideAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "overrideParam",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paramGovernance",
    outputs: [
      {
        internalType: "contract IParamGovernance",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolUtilizationAllowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceGuard",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "referralFirstBonus",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "referralProgram",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "referralSecondBonus",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "referralThirdBonus",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
    ],
    name: "reset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setMaxLeverageFactor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "paramGovernance",
        type: "address",
      },
    ],
    name: "setParamGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "value",
        type: "address",
      },
    ],
    name: "setPriceGuard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "value",
        type: "address",
      },
    ],
    name: "setSwapRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenConverter",
        type: "address",
      },
    ],
    name: "setTokenConverter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenConverter",
    outputs: [
      {
        internalType: "contract IPriceGuard",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "traderProfitFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasureFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasurer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "xWOW",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611a77806100206000396000f3fe608060405234801561001057600080fd5b50600436106102d65760003560e01c80638897cad311610182578063bf386682116100e9578063dfabb4d7116100a2578063f2fde38b1161007c578063f2fde38b146104eb578063f5e0f74c146104fe578063fb844c2c14610511578063fda49eb414610519576102d6565b8063dfabb4d7146104bd578063eb990c59146104c5578063ed3c7d40146104d8576102d6565b8063bf38668214610482578063c31c9c071461048a578063c56aa16614610492578063cdc42344146104a5578063d55ec697146104ad578063dde43cba146104b5576102d6565b8063acdd82431161013b578063acdd824314610447578063ad214e1a1461044f578063ade8d43c14610457578063b2c53a6c1461046a578063b339b36814610472578063b84fe2ab1461047a576102d6565b80638897cad31461040c5780638da5cb5b146104145780638fea21071461041c57806395e0f9fd14610424578063a67aee1f14610437578063ab78ace41461043f576102d6565b806341273657116102415780636290cd1c116101fa578063715018a6116101d4578063715018a6146103e157806373717b08146103e95780637629da6f146103f15780637f18576114610404576102d6565b80636290cd1c146103be57806362a18582146103c6578063647846a5146103d9576102d6565b8063412736571461038357806344b01c561461039657806351b42b001461039e5780635a7cc004146103a65780635d03baea146103ae5780635f4985c4146103b6576102d6565b8063255bb3a911610293578063255bb3a91461034857806327b182921461035057806332f51af81461036357806336d8b0cc1461036b57806337ae0f1b146103735780633cbb3a121461037b576102d6565b8063091ec88e146102db5780630f15f4c0146102f95780631e70ad0a1461030357806321f8a7211461030b5780632262697e1461032b57806322f3e2d414610333575b600080fd5b6102e3610521565b6040516102f091906119af565b60405180910390f35b61030161052d565b005b6102e36105b3565b61031e610319366004611910565b6105d6565b6040516102f09190611990565b6102e36105e9565b61033b61061f565b6040516102f091906119a4565b6102e3610631565b6102e361035e366004611910565b61064b565b6102e36106bb565b61031e6106e6565b6102e36106ff565b6102e3610727565b61030161039136600461188c565b610751565b6102e36107ce565b6103016107e9565b61031e610873565b6102e3610895565b6102e36108c9565b6102e36109a1565b6103016103d4366004611957565b6109c2565b61031e610a32565b610301610a76565b6102e3610b22565b6103016103ff366004611910565b610b32565b6102e3610bb4565b6102e3610bda565b61031e610c05565b6102e3610c14565b61030161043236600461188c565b610c32565b61031e610cac565b6102e3610cbc565b61031e610d27565b61031e610da5565b61030161046536600461188c565b610db6565b6102e3610e3b565b6102e3610e65565b6102e3610e8e565b6102e3610eac565b61031e610eca565b6103016104a036600461188c565b610ee3565b61031e610f68565b610301610f86565b6102e3611013565b61031e611018565b6103016104d33660046118cb565b611028565b6103016104e6366004611910565b6110fb565b6103016104f936600461188c565b611169565b61030161050c366004611928565b61126c565b6102e36112d8565b61031e611302565b670de0b6b3a764000081565b610535611319565b6001600160a01b0316610546610c05565b6001600160a01b03161461058f576040805162461bcd60e51b81526020600482018190526024820152600080516020611a22833981519152604482015290519081900360640190fd5b6101ab54600160a01b900460ff16156105b1576101ab805460ff60a01b191690555b565b60006105d16f2922a322a92920a62fa127a72aa9af9960811b61131d565b905090565b60006105e1826113c7565b90505b919050565b6000670de0b6b3a7640000610612712624a8aaa4a220aa24a7a72fa6a0a923a4a760711b61131d565b8161061957fe5b04905090565b6101ab54600160a01b900460ff161590565b60006105d16b4558434553535f534c4f504560a01b61131d565b600061c35082111561065c57600080fd5b619c4082111561068b57610684714d494e5f574f575f42414c414e43455f583560701b61131d565b90506105e4565b6175308211156106b3576106847113525397d5d3d5d7d09053105390d157d60d60721b61131d565b506000919050565b60006105d17f4e4f5f444542545f4c455645524147455f464143544f5200000000000000000061131d565b60006105d16a14149250d157d1d550549160aa1b6113c7565b6000670de0b6b3a7640000610612705452414445525f50524f4649545f46454560781b61131d565b6000670de0b6b3a76400006106127213505617d4149250d157d512149154d213d311606a1b61131d565b610759611319565b6001600160a01b031661076a610c05565b6001600160a01b0316146107b3576040805162461bcd60e51b81526020600482018190526024820152600080516020611a22833981519152604482015290519081900360640190fd5b6107cb6a29aba0a82fa927aaaa22a960a91b8261147a565b50565b60006105d16c4f5054494d414c5f534c4f504560981b61131d565b6107f1611319565b6001600160a01b0316610802610c05565b6001600160a01b03161461084b576040805162461bcd60e51b81526020600482018190526024820152600080516020611a22833981519152604482015290519081900360640190fd5b6101ab54600160a01b900460ff166105b1576101ab805460ff60a01b1916600160a01b179055565b60006105d17323aaa0a92222a22fa82924a1a2afa9a4a3a722a960611b6113c7565b6000670de0b6b3a76400006106127f504f4f4c5f5554494c495a4154494f4e5f414c4c4f57414e434500000000000061131d565b6101ab546000906001600160a01b031615610981576101ab546001600160a01b0316635c1952176109107313525397d413d4d2551253d397d1115413d4d25560621b61131d565b6040518263ffffffff1660e01b815260040161092c91906119af565b60206040518083038186803b15801561094457600080fd5b505afa158015610958573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097c9190611978565b6105d1565b6105d17313525397d413d4d2551253d397d1115413d4d25560621b61131d565b60006105d17227a82a24a6a0a62faaaa24a624ad20aa24a7a760691b61131d565b6109ca611319565b6001600160a01b03166109db610c05565b6001600160a01b031614610a24576040805162461bcd60e51b81526020600482018190526024820152600080516020611a22833981519152604482015290519081900360640190fd5b610a2e82826114b6565b5050565b682322a2afaa27a5a2a760b91b6000526101aa6020527f9c07313eff2e43b352f6c3f403cc4ed4b30d45544d09062d45a389338f34dbf3546001600160a01b031690565b610a7e611319565b6001600160a01b0316610a8f610c05565b6001600160a01b031614610ad8576040805162461bcd60e51b81526020600482018190526024820152600080516020611a22833981519152604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b682322a2afaa27a5a2a760b91b81565b610b3a611319565b6001600160a01b0316610b4b610c05565b6001600160a01b031614610b94576040805162461bcd60e51b81526020600482018190526024820152600080516020611a22833981519152604482015290519081900360640190fd5b6107cb7226a0ac2fa622ab22a920a3a2afa320a1aa27a960691b826114b6565b6000670de0b6b3a76400006106126e2a2922a0a9aaa922afa320a1aa27a960891b61131d565b60006105d17f504f534954494f4e5f45585049524154494f4e5f504552494f4400000000000061131d565b6033546001600160a01b031690565b60006105d16f524546455252414c5f424f4e55535f3360801b61131d565b610c3a611319565b6001600160a01b0316610c4b610c05565b6001600160a01b031614610c94576040805162461bcd60e51b81526020600482018190526024820152600080516020611a22833981519152604482015290519081900360640190fd5b6107cb6a14149250d157d1d550549160aa1b8261147a565b6101ab546001600160a01b031690565b6101ab546000906001600160a01b031615610d05576101ab546001600160a01b0316635c1952176109107513505617d3125455525110551253d397d49155d0549160521b61131d565b6105d17513505617d3125455525110551253d397d49155d0549160521b61131d565b6101a6546040805163acdd824360e01b815290516000926001600160a01b03169163acdd8243916004808301926020929190829003018186803b158015610d6d57600080fd5b505afa158015610d81573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d191906118af565b60006105d162574f5760e81b6113c7565b610dbe611319565b6001600160a01b0316610dcf610c05565b6001600160a01b031614610e18576040805162461bcd60e51b81526020600482018190526024820152600080516020611a22833981519152604482015290519081900360640190fd5b6101a680546001600160a01b0319166001600160a01b0392909216919091179055565b6000670de0b6b3a76400006106127226a0ac2fa622ab22a920a3a2afa320a1aa27a960691b61131d565b6000670de0b6b3a76400006106127113125455525110551253d397d49155d0549160721b61131d565b60006105d16f524546455252414c5f424f4e55535f3160801b61131d565b60006105d16f424153455f424f52524f575f5241544560801b61131d565b60006105d16a29aba0a82fa927aaaa22a960a91b6113c7565b610eeb611319565b6001600160a01b0316610efc610c05565b6001600160a01b031614610f45576040805162461bcd60e51b81526020600482018190526024820152600080516020611a22833981519152604482015290519081900360640190fd5b6101ab80546001600160a01b0319166001600160a01b0392909216919091179055565b60006105d16f524546455252414c5f50524f4752414d60801b6113c7565b610f8e611319565b6001600160a01b0316610f9f610c05565b6001600160a01b031614610fe8576040805162461bcd60e51b81526020600482018190526024820152600080516020611a22833981519152604482015290519081900360640190fd5b610176546001600160a01b031680156107cb576107cb6a14149250d157d1d550549160aa1b8261147a565b60d281565b6101a6546001600160a01b031690565b600054610100900460ff168061104157506110416114d6565b8061104f575060005460ff16155b61108a5760405162461bcd60e51b815260040180806020018281038252602e8152602001806119f4602e913960400191505060405180910390fd5b600054610100900460ff161580156110b5576000805460ff1961ff0019909116610100171660011790555b6110bd6114e7565b6110c685611169565b6101a680546001600160a01b0319166001600160a01b03861617905580156110f4576000805461ff00191690555b5050505050565b611103611319565b6001600160a01b0316611114610c05565b6001600160a01b03161461115d576040805162461bcd60e51b81526020600482018190526024820152600080516020611a22833981519152604482015290519081900360640190fd5b610a2e6101a782611598565b611171611319565b6001600160a01b0316611182610c05565b6001600160a01b0316146111cb576040805162461bcd60e51b81526020600482018190526024820152600080516020611a22833981519152604482015290519081900360640190fd5b6001600160a01b0381166112105760405162461bcd60e51b81526004018080602001828103825260268152602001806119ce6026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b611274611319565b6001600160a01b0316611285610c05565b6001600160a01b0316146112ce576040805162461bcd60e51b81526020600482018190526024820152600080516020611a22833981519152604482015290519081900360640190fd5b610a2e828261147a565b6000670de0b6b3a76400006106127226a0ac2fa920aa22afa6aaa62a24a82624a2a960691b61131d565b60006105d1682a2922a0a9aaa922a960b91b6113c7565b3390565b600061132b6101a7836115ad565b15611346575060008181526101a960205260409020546105e4565b6101a65460405163efc1a9bf60e01b81526001600160a01b039091169063efc1a9bf906113779085906004016119af565b60206040518083038186803b15801561138f57600080fd5b505afa1580156113a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e19190611978565b60006113d56101a7836115ad565b156113f9575060008181526101aa60205260409020546001600160a01b03166105e4565b6101a6546040516321f8a72160e01b81526001600160a01b03909116906321f8a7219061142a9085906004016119af565b60206040518083038186803b15801561144257600080fd5b505afa158015611456573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e191906118af565b6114866101a7836115b9565b5060009182526101aa602052604090912080546001600160a01b0319166001600160a01b03909216919091179055565b6114c26101a7836115b9565b5060009182526101a9602052604090912055565b60006114e1306115c5565b15905090565b600054610100900460ff168061150057506115006114d6565b8061150e575060005460ff16155b6115495760405162461bcd60e51b815260040180806020018281038252602e8152602001806119f4602e913960400191505060405180910390fd5b600054610100900460ff16158015611574576000805460ff1961ff0019909116610100171660011790555b61157c6115cb565b61158461166b565b80156107cb576000805461ff001916905550565b60006115a48383611764565b90505b92915050565b60006115a4838361182a565b60006115a48383611842565b3b151590565b600054610100900460ff16806115e457506115e46114d6565b806115f2575060005460ff16155b61162d5760405162461bcd60e51b815260040180806020018281038252602e8152602001806119f4602e913960400191505060405180910390fd5b600054610100900460ff16158015611584576000805460ff1961ff00199091166101001716600117905580156107cb576000805461ff001916905550565b600054610100900460ff168061168457506116846114d6565b80611692575060005460ff16155b6116cd5760405162461bcd60e51b815260040180806020018281038252602e8152602001806119f4602e913960400191505060405180910390fd5b600054610100900460ff161580156116f8576000805460ff1961ff0019909116610100171660011790555b6000611702611319565b603380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35080156107cb576000805461ff001916905550565b60008181526001830160205260408120548015611820578354600019808301919081019060009087908390811061179757fe5b90600052602060002001549050808760000184815481106117b457fe5b6000918252602080832090910192909255828152600189810190925260409020908401905586548790806117e457fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506115a7565b60009150506115a7565b60009081526001919091016020526040902054151590565b600061184e838361182a565b611884575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556115a7565b5060006115a7565b60006020828403121561189d578081fd5b81356118a8816119b8565b9392505050565b6000602082840312156118c0578081fd5b81516118a8816119b8565b600080600080608085870312156118e0578283fd5b84356118eb816119b8565b935060208501356118fb816119b8565b93969395505050506040820135916060013590565b600060208284031215611921578081fd5b5035919050565b6000806040838503121561193a578182fd5b82359150602083013561194c816119b8565b809150509250929050565b60008060408385031215611969578182fd5b50508035926020909101359150565b600060208284031215611989578081fd5b5051919050565b6001600160a01b0391909116815260200190565b901515815260200190565b90815260200190565b6001600160a01b03811681146107cb57600080fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a65644f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220f776943773f88a33f19955de7a5019005adf06d2dffa0a09325bd1b5e231b83864736f6c63430007040033";

export class ParamProvider__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ParamProvider> {
    return super.deploy(overrides || {}) as Promise<ParamProvider>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ParamProvider {
    return super.attach(address) as ParamProvider;
  }
  connect(signer: Signer): ParamProvider__factory {
    return super.connect(signer) as ParamProvider__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ParamProviderInterface {
    return new utils.Interface(_abi) as ParamProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ParamProvider {
    return new Contract(address, _abi, signerOrProvider) as ParamProvider;
  }
}
