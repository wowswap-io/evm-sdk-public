/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UniswapV3PriceProvider,
  UniswapV3PriceProviderInterface,
} from "../UniswapV3PriceProvider";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "REVISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "amountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "amountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "getSwapFee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "swapRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "quoter",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "defaultFee",
        type: "uint24",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "m_defaultFee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "m_swapFee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
    ],
    name: "setSwapFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "toSwapPath",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610eb3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063715018a61161008c578063dde43cba11610066578063dde43cba146101a8578063f29b2259146101b0578063f2fde38b146101b8578063f887ea40146101cb576100cf565b8063715018a6146101785780638da5cb5b14610180578063b2ab53d614610195576100cf565b80630a791827146100d45780632de192dc146100fd578063312ef4841461011d578063336c8d70146101325780635740a5561461014557806368c6350514610165575b600080fd5b6100e76100e2366004610c5f565b6101d3565b6040516100f49190610ddb565b60405180910390f35b61011061010b366004610be0565b6101e6565b6040516100f49190610e10565b61013061012b366004610c12565b6101f9565b005b610130610140366004610c12565b6102c8565b610158610153366004610caa565b6103bb565b6040516100f49190610e20565b610158610173366004610caa565b610450565b61013061046d565b61018861052b565b6040516100f49190610dc7565b6101106101a3366004610be0565b61053a565b61015861055c565b610110610561565b6101306101c6366004610bc6565b610573565b610188610688565b60606101de82610697565b90505b919050565b60006101f283836107c2565b9392505050565b610201610812565b6001600160a01b031661021261052b565b6001600160a01b03161461026d576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b039283166000818152606760208181526040808420969097168352948552858220805462ffffff90951662ffffff199586168117909155908552858220928252919093529290912080549091169091179055565b600054610100900460ff16806102e157506102e1610816565b806102ef575060005460ff16155b61032a5760405162461bcd60e51b815260040180806020018281038252602e815260200180610e50602e913960400191505060405180910390fd5b600054610100900460ff16158015610355576000805460ff1961ff0019909116610100171660011790555b61035d610827565b606580546001600160a01b038087166001600160a01b0319928316179092556066805462ffffff8616600160a01b0262ffffff60a01b1994881691909316179290921617905580156103b5576000805461ff00191690555b50505050565b6066546000906001600160a01b0316632f80bb1d6103e06103db856108d9565b610697565b856040518363ffffffff1660e01b81526004016103fe929190610dee565b602060405180830381600087803b15801561041857600080fd5b505af115801561042c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f29190610c92565b6066546000906001600160a01b031663cdca17536103e084610697565b610475610812565b6001600160a01b031661048661052b565b6001600160a01b0316146104e1576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b6033546001600160a01b031690565b606760209081526000928352604080842090915290825290205462ffffff1681565b600181565b606654600160a01b900462ffffff1681565b61057b610812565b6001600160a01b031661058c61052b565b6001600160a01b0316146105e7576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b03811661062c5760405162461bcd60e51b8152600401808060200182810382526026815260200180610e2a6026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b6065546001600160a01b031690565b6060815160021461076057816000815181106106af57fe5b60200260200101516106e9836000815181106106c757fe5b6020026020010151846001815181106106dc57fe5b60200260200101516107c2565b836001815181106106f657fe5b60200260200101516107238560018151811061070e57fe5b6020026020010151866002815181106106dc57fe5b8560028151811061073057fe5b602002602001015160405160200161074c959493929190610d75565b6040516020818303038152906040526101de565b8160008151811061076d57fe5b6020026020010151610785836000815181106106c757fe5b8360018151811061079257fe5b60200260200101516040516020016107ac93929190610d3a565b6040516020818303038152906040529050919050565b6001600160a01b03808316600090815260676020908152604080832093851683529290529081205462ffffff168061080857606654600160a01b900462ffffff1661080a565b805b949350505050565b3390565b60006108213061097a565b15905090565b600054610100900460ff16806108405750610840610816565b8061084e575060005460ff16155b6108895760405162461bcd60e51b815260040180806020018281038252602e815260200180610e50602e913960400191505060405180910390fd5b600054610100900460ff161580156108b4576000805460ff1961ff0019909116610100171660011790555b6108bc610980565b6108c4610a20565b80156108d6576000805461ff00191690555b50565b606080825167ffffffffffffffff811180156108f457600080fd5b5060405190808252806020026020018201604052801561091e578160200160208202803683370190505b50905060005b83518110156109735783816001865103038151811061093f57fe5b602002602001015182828151811061095357fe5b6001600160a01b0390921660209283029190910190910152600101610924565b5092915050565b3b151590565b600054610100900460ff16806109995750610999610816565b806109a7575060005460ff16155b6109e25760405162461bcd60e51b815260040180806020018281038252602e815260200180610e50602e913960400191505060405180910390fd5b600054610100900460ff161580156108c4576000805460ff1961ff00199091166101001716600117905580156108d6576000805461ff001916905550565b600054610100900460ff1680610a395750610a39610816565b80610a47575060005460ff16155b610a825760405162461bcd60e51b815260040180806020018281038252602e815260200180610e50602e913960400191505060405180910390fd5b600054610100900460ff16158015610aad576000805460ff1961ff0019909116610100171660011790555b6000610ab7610812565b603380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35080156108d6576000805461ff001916905550565b80356001600160a01b03811681146101e157600080fd5b600082601f830112610b40578081fd5b813567ffffffffffffffff80821115610b5557fe5b602080830260405182828201018181108582111715610b7057fe5b604052848152945081850192508582018187018301881015610b9157600080fd5b600091505b84821015610bbb57610ba781610b19565b845292820192600191909101908201610b96565b505050505092915050565b600060208284031215610bd7578081fd5b6101f282610b19565b60008060408385031215610bf2578081fd5b610bfb83610b19565b9150610c0960208401610b19565b90509250929050565b600080600060608486031215610c26578081fd5b610c2f84610b19565b9250610c3d60208501610b19565b9150604084013562ffffff81168114610c54578182fd5b809150509250925092565b600060208284031215610c70578081fd5b813567ffffffffffffffff811115610c86578182fd5b61080a84828501610b30565b600060208284031215610ca3578081fd5b5051919050565b60008060408385031215610cbc578182fd5b82359150602083013567ffffffffffffffff811115610cd9578182fd5b610ce585828601610b30565b9150509250929050565b60008151808452815b81811015610d1457602081850181015186830182015201610cf8565b81811115610d255782602083870101525b50601f01601f19169290920160200192915050565b606093841b6bffffffffffffffffffffffff19908116825260e89390931b6001600160e81b0319166014820152921b166017820152602b0190565b6bffffffffffffffffffffffff19606096871b811682526001600160e81b031960e896871b8116601484015294871b811660178301529290941b909216602b840152921b909116602e82015260420190565b6001600160a01b0391909116815260200190565b6000602082526101f26020830184610cef565b600060408252610e016040830185610cef565b90508260208301529392505050565b62ffffff91909116815260200190565b9081526020019056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a2646970667358221220111dfd33b78034ba4ea81f0a9dba741d96ed9632b9c945f9c88da7f2f489defd64736f6c63430007040033";

export class UniswapV3PriceProvider__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UniswapV3PriceProvider> {
    return super.deploy(overrides || {}) as Promise<UniswapV3PriceProvider>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UniswapV3PriceProvider {
    return super.attach(address) as UniswapV3PriceProvider;
  }
  connect(signer: Signer): UniswapV3PriceProvider__factory {
    return super.connect(signer) as UniswapV3PriceProvider__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3PriceProviderInterface {
    return new utils.Interface(_abi) as UniswapV3PriceProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV3PriceProvider {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UniswapV3PriceProvider;
  }
}
