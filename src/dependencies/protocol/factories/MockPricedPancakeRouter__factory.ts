/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockPricedPancakeRouter,
  MockPricedPancakeRouterInterface,
} from "../MockPricedPancakeRouter";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountAIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForTokensSupportingFeeOnTransferTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ea0806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806338ed1739146100515780635c11d7951461015e578063d06ca61f1461021b578063e8e33700146102c5575b600080fd5b61010e600480360360a081101561006757600080fd5b81359160208101359181019060608101604082013564010000000081111561008e57600080fd5b8201836020820111156100a057600080fd5b803590602001918460208302840111640100000000831117156100c257600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550506001600160a01b038335169350505060200135610338565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561014a578181015183820152602001610132565b505050509050019250505060405180910390f35b61010e600480360360a081101561017457600080fd5b81359160208101359181019060608101604082013564010000000081111561019b57600080fd5b8201836020820111156101ad57600080fd5b803590602001918460208302840111640100000000831117156101cf57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550506001600160a01b0383351693505050602001356103ef565b61010e6004803603604081101561023157600080fd5b8135919081019060408101602082013564010000000081111561025357600080fd5b82018360208201111561026557600080fd5b8035906020019184602083028401116401000000008311171561028757600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610408945050505050565b61031a60048036036101008110156102dc57600080fd5b506001600160a01b038135811691602081013582169160408201359160608101359160808201359160a08101359160c0820135169060e001356105fb565b60408051938452602084019290925282820152519081900360600190f35b6060806103458786610408565b905060008160018751038151811061035957fe5b60200260200101519050868110156103a25760405162461bcd60e51b8152600401808060200182810382526029815260200180610df26029913960400191505060405180910390fd5b6103c2866000815181106103b257fe5b602002602001015133308b61069b565b6103e4866001885103815181106103d557fe5b602002602001015133836107f8565b505095945050505050565b60606103fe8686868686610338565b9695505050505050565b606061043c6040518060400160405280600f81526020016e1c185d1a081b195b99dd1a0e880959608a1b815250835161094c565b60005b82518110156104975761048f60405180604001604052806011815260200170616464726573732061742025643a20257360781b8152508285848151811061048257fe5b60200260200101516109fe565b60010161043f565b50815167ffffffffffffffff811180156104b057600080fd5b506040519080825280602002602001820160405280156104da578160200160208202803683370190505b50905082816000815181106104eb57fe5b602090810291909101015260015b82518110156105f45760008084600184038151811061051457fe5b602002602001015185848151811061052857fe5b60200260200101519150915060008060006105438585610ac2565b6001600160a01b03808416600090815260208181526040808320938616835292905220549295509093509150816105a25761059d818960018a038151811061058757fe5b6020026020010151610ba890919063ffffffff16565b6105cb565b6105cb818960018a03815181106105b557fe5b6020026020010151610c9d90919063ffffffff16565b8888815181106105d757fe5b60209081029190910101525050600190940193506104f992505050565b5092915050565b600080600061060c8b33308661069b565b6106188a33308561069b565b60008060006106278e8e610ac2565b9250925092506000808261063c578c8e61063f565b8d8d5b909250905060006106508383610c9d565b6001600160a01b03968716600090815260208181526040808320989099168252969096529590942094909455509a9d999c50670de0b6b3a76400009b50989950505050505050505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17815292518251600094606094938a169392918291908083835b602083106107205780518252601f199092019160209182019101610701565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610782576040519150601f19603f3d011682016040523d82523d6000602084013e610787565b606091505b50915091508180156107b55750805115806107b557508080602001905160208110156107b257600080fd5b50515b6107f05760405162461bcd60e51b8152600401808060200182810382526031815260200180610dc16031913960400191505060405180910390fd5b505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b178152925182516000946060949389169392918291908083835b602083106108755780518252601f199092019160209182019101610856565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146108d7576040519150601f19603f3d011682016040523d82523d6000602084013e6108dc565b606091505b509150915081801561090a57508051158061090a575080806020019051602081101561090757600080fd5b50515b6109455760405162461bcd60e51b815260040180806020018281038252602d815260200180610e3e602d913960400191505060405180910390fd5b5050505050565b6109fa82826040516024018080602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561099757818101518382015260200161097f565b50505050905090810190601f1680156109c45780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b1790529350610d9f92505050565b5050565b610abd8383836040516024018080602001848152602001836001600160a01b03168152602001828103825285818151815260200191508051906020019080838360005b83811015610a59578181015183820152602001610a41565b50505050905090810190601f168015610a865780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b031663e3849f7960e01b1790529450610d9f9350505050565b505050565b6000806000836001600160a01b0316856001600160a01b03161415610b185760405162461bcd60e51b8152600401808060200182810382526023815260200180610e1b6023913960400191505060405180910390fd5b836001600160a01b0316856001600160a01b031610610b3a5783856001610b3f565b848460005b919450925090506001600160a01b038316610ba1576040805162461bcd60e51b815260206004820152601c60248201527f50616e63616b654c6962726172793a205a45524f5f4144445245535300000000604482015290519081900360640190fd5b9250925092565b6000821580610bb5575081155b15610bc257506000610c97565b816706f05b59d3b200001981610bd457fe5b04831115604051806040016040528060038152602001624d4d4f60e81b81525090610c7d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c42578181015183820152602001610c2a565b50505050905090810190601f168015610c6f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5050670de0b6b3a76400006706f05b59d3b2000082840201045b92915050565b60408051808201909152600381526226a22d60e91b602082015260009082610d065760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610c42578181015183820152602001610c2a565b506040805180820190915260038152624d4d4f60e81b60208201526002830490670de0b6b3a7640000821904851115610d805760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610c42578181015183820152602001610c2a565b508281670de0b6b3a764000086020181610d9657fe5b04949350505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa505050505056fe5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c656450616e63616b65526f757465723a20494e53554646494349454e545f4f55545055545f414d4f554e5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345535472616e7366657248656c7065723a3a736166655472616e736665723a207472616e73666572206661696c6564a2646970667358221220735218da918e401f7796d2c64d0c5922d472c16553fa6c68775e39a9a2edd83864736f6c63430007040033";

export class MockPricedPancakeRouter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockPricedPancakeRouter> {
    return super.deploy(overrides || {}) as Promise<MockPricedPancakeRouter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockPricedPancakeRouter {
    return super.attach(address) as MockPricedPancakeRouter;
  }
  connect(signer: Signer): MockPricedPancakeRouter__factory {
    return super.connect(signer) as MockPricedPancakeRouter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockPricedPancakeRouterInterface {
    return new utils.Interface(_abi) as MockPricedPancakeRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockPricedPancakeRouter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockPricedPancakeRouter;
  }
}
