/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FixedPointMath,
  FixedPointMathInterface,
} from "../FixedPointMath";

const _abi = [
  {
    inputs: [],
    name: "e",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exp10",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialDigits",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ln10",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ln1_5",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "one",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x610167610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c806343604e18146100715780634a64973f1461008f5780638cc82b8c146100a9578063901717d1146100b1578063f4b160fd146100b9578063ffae15ba146100c1575b600080fd5b6100796100c9565b6040805160ff9092168252519081900360200190f35b6100976100ce565b60408051918252519081900360200190f35b6100976100e2565b6100976100f7565b61009761010a565b61009761011d565b602481565b6f01bb7635c5de48ef4ce5b7b41cc43db081565b7040badf011b5fc35ab64f29c13ff3528d0081565b6ec097ce7bc90715b34b9f100000000081565b6e4e16f927cdca7f15b39123f740f5d181565b6f020b85a438b48462e4212f98f0ebc9e28156fea264697066735822122073205ce9e793fe492e599bbf8cac6d27229c1c52b34b142e2b6f3446d0a49f6d64736f6c63430007040033";

export class FixedPointMath__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FixedPointMath> {
    return super.deploy(overrides || {}) as Promise<FixedPointMath>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FixedPointMath {
    return super.attach(address) as FixedPointMath;
  }
  connect(signer: Signer): FixedPointMath__factory {
    return super.connect(signer) as FixedPointMath__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FixedPointMathInterface {
    return new utils.Interface(_abi) as FixedPointMathInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FixedPointMath {
    return new Contract(address, _abi, signerOrProvider) as FixedPointMath;
  }
}
