/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockReentrantSwapRouter,
  MockReentrantSwapRouterInterface,
} from "../MockReentrantSwapRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_pancakeRouter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "callClosePosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "callLiquidatePosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "callOpenPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForTokensSupportingFeeOnTransferTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610b34380380610b3483398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b610aa3806100916000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631af3088b1461005c578063480a66e8146100665780635c11d7951461006e5780637bcd31d914610081578063d06ca61f14610089575b600080fd5b6100646100b2565b005b6100646100c9565b61006461007c36600461080b565b6100e4565b6100646105bb565b61009c6100973660046107c1565b6105d1565b6040516100a991906109a4565b60405180910390f35b6d21a627a9a2afa827a9a4aa24a7a760911b600155565b712624a8aaa4a220aa22afa827a9a4aa24a7a760711b600155565b60015433906c27a822a72fa827a9a4aa24a7a760991b14156101c8576040805160a0810182526000808252602080830182905282840182905260608084018390528451908101855282815290810182905280840182905260808301529151631fa6429f60e11b81526001600160a01b03841692633f4c853e92610170928291829182919060040161092a565b602060405180830381600087803b15801561018a57600080fd5b505af115801561019e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c291906107a9565b506102b4565b6001546d21a627a9a2afa827a9a4aa24a7a760911b141561021257604051630e85fc3f60e31b81526001600160a01b0382169063742fe1f890610170906000908190600401610911565b600154712624a8aaa4a220aa22afa827a9a4aa24a7a760711b14156102b45760405163586e848f60e01b81526001600160a01b0382169063586e848f906102609060009081906004016108d3565b602060405180830381600087803b15801561027a57600080fd5b505af115801561028e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b29190610789565b505b848460008181106102c157fe5b90506020020160208101906102d691906106c7565b6001600160a01b03166323b872dd33308a6040518463ffffffff1660e01b8152600401610305939291906108ed565b602060405180830381600087803b15801561031f57600080fd5b505af1158015610333573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103579190610789565b508484600081811061036557fe5b905060200201602081019061037a91906106c7565b60005460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926103ad929116908b90600401610911565b602060405180830381600087803b1580156103c757600080fd5b505af11580156103db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ff9190610789565b50600054604051635c11d79560e01b81526001600160a01b0390911690635c11d7959061043a908a908a908a908a908a908a90600401610a0b565b600060405180830381600087803b15801561045457600080fd5b505af1158015610468573d6000803e3d6000fd5b5087925086915050600019810181811061047e57fe5b905060200201602081019061049391906106c7565b6001600160a01b031663a9059cbb33878760001981018181106104b257fe5b90506020020160208101906104c791906106c7565b6001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016104f291906108bf565b60206040518083038186803b15801561050a57600080fd5b505afa15801561051e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054291906107a9565b6040518363ffffffff1660e01b815260040161055f929190610911565b602060405180830381600087803b15801561057957600080fd5b505af115801561058d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b19190610789565b5050505050505050565b6c27a822a72fa827a9a4aa24a7a760991b600155565b60005460405163d06ca61f60e01b81526060916001600160a01b03169063d06ca61f90610606908790879087906004016109e8565b60006040518083038186803b15801561061e57600080fd5b505afa158015610632573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261065a91908101906106e8565b949350505050565b80356001600160a01b038116811461067957600080fd5b919050565b60008083601f84011261068f578182fd5b50813567ffffffffffffffff8111156106a6578182fd5b60208301915083602080830285010111156106c057600080fd5b9250929050565b6000602082840312156106d8578081fd5b6106e182610662565b9392505050565b600060208083850312156106fa578182fd5b825167ffffffffffffffff80821115610711578384fd5b818501915085601f830112610724578384fd5b81518181111561073057fe5b8381029150610740848301610a49565b8181528481019084860184860187018a101561075a578788fd5b8795505b8386101561077c57805183526001959095019491860191860161075e565b5098975050505050505050565b60006020828403121561079a578081fd5b815180151581146106e1578182fd5b6000602082840312156107ba578081fd5b5051919050565b6000806000604084860312156107d5578182fd5b83359250602084013567ffffffffffffffff8111156107f2578283fd5b6107fe8682870161067e565b9497909650939450505050565b60008060008060008060a08789031215610823578182fd5b8635955060208701359450604087013567ffffffffffffffff811115610847578283fd5b61085389828a0161067e565b9095509350610866905060608801610662565b9150608087013590509295509295509295565b60008284526020808501945082825b858110156108b4576001600160a01b036108a183610662565b1687529582019590820190600101610888565b509495945050505050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0395861681526020808201959095526040808201949094529190941660608083019190915284516080808401919091528585015160a08401528584015160c08401529085015160e083015290930151805160ff166101008501529182015161012084015201516101408201526101600190565b6020808252825182820181905260009190848201906040850190845b818110156109dc578351835292840192918401916001016109c0565b50909695505050505050565b600084825260406020830152610a02604083018486610879565b95945050505050565b600087825286602083015260a06040830152610a2b60a083018688610879565b6001600160a01b039490941660608301525060800152949350505050565b60405181810167ffffffffffffffff81118282101715610a6557fe5b60405291905056fea2646970667358221220611ff0b74fadd1aa74b38b361fc9f8a9b74bf922615caee97cf163ef668f796f64736f6c63430007040033";

export class MockReentrantSwapRouter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _pancakeRouter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockReentrantSwapRouter> {
    return super.deploy(
      _pancakeRouter,
      overrides || {}
    ) as Promise<MockReentrantSwapRouter>;
  }
  getDeployTransaction(
    _pancakeRouter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_pancakeRouter, overrides || {});
  }
  attach(address: string): MockReentrantSwapRouter {
    return super.attach(address) as MockReentrantSwapRouter;
  }
  connect(signer: Signer): MockReentrantSwapRouter__factory {
    return super.connect(signer) as MockReentrantSwapRouter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockReentrantSwapRouterInterface {
    return new utils.Interface(_abi) as MockReentrantSwapRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockReentrantSwapRouter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockReentrantSwapRouter;
  }
}
