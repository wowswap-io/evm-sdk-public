/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableUpgradeable__factory>;
    getContractFactory(
      name: "ERC20Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Upgradeable__factory>;
    getContractFactory(
      name: "IERC20Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Upgradeable__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC20Detailed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Detailed__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "Multicall",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Multicall__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IPancakeCallee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPancakeCallee__factory>;
    getContractFactory(
      name: "IPancakeERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPancakeERC20__factory>;
    getContractFactory(
      name: "IPancakeFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPancakeFactory__factory>;
    getContractFactory(
      name: "IPancakePair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPancakePair__factory>;
    getContractFactory(
      name: "PancakeERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PancakeERC20__factory>;
    getContractFactory(
      name: "PancakeFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PancakeFactory__factory>;
    getContractFactory(
      name: "PancakePair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PancakePair__factory>;
    getContractFactory(
      name: "FixedPoint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FixedPoint__factory>;
    getContractFactory(
      name: "IPancakeMigrator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPancakeMigrator__factory>;
    getContractFactory(
      name: "IPancakeRouter01",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPancakeRouter01__factory>;
    getContractFactory(
      name: "IPancakeRouter02",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPancakeRouter02__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "IUniswapV1Exchange",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV1Exchange__factory>;
    getContractFactory(
      name: "IUniswapV1Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV1Factory__factory>;
    getContractFactory(
      name: "PancakeRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PancakeRouter__factory>;
    getContractFactory(
      name: "PancakeRouter01",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PancakeRouter01__factory>;
    getContractFactory(
      name: "AdminUpgradeabilityProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AdminUpgradeabilityProxy__factory>;
    getContractFactory(
      name: "BaseAdminUpgradeabilityProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseAdminUpgradeabilityProxy__factory>;
    getContractFactory(
      name: "BaseUpgradeabilityProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseUpgradeabilityProxy__factory>;
    getContractFactory(
      name: "InitializableAdminUpgradeabilityProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InitializableAdminUpgradeabilityProxy__factory>;
    getContractFactory(
      name: "InitializableUpgradeabilityProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InitializableUpgradeabilityProxy__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "UpgradeabilityProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UpgradeabilityProxy__factory>;
    getContractFactory(
      name: "INewPriceGuardFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INewPriceGuardFactory__factory>;
    getContractFactory(
      name: "IPair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPair__factory>;
    getContractFactory(
      name: "IPairDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPairDeployer__factory>;
    getContractFactory(
      name: "IPairExplorer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPairExplorer__factory>;
    getContractFactory(
      name: "IPairFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPairFactory__factory>;
    getContractFactory(
      name: "IParamProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IParamProvider__factory>;
    getContractFactory(
      name: "IParamProviderFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IParamProviderFactory__factory>;
    getContractFactory(
      name: "IPriceFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPriceFeed__factory>;
    getContractFactory(
      name: "IPriceGuard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPriceGuard__factory>;
    getContractFactory(
      name: "IPriceGuardFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPriceGuardFactory__factory>;
    getContractFactory(
      name: "IReferral",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IReferral__factory>;
    getContractFactory(
      name: "IReserve",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IReserve__factory>;
    getContractFactory(
      name: "IReserveDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IReserveDeployer__factory>;
    getContractFactory(
      name: "IReserveFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IReserveFactory__factory>;
    getContractFactory(
      name: "IRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRouter__factory>;
    getContractFactory(
      name: "IRouterOld",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRouterOld__factory>;
    getContractFactory(
      name: "IShortingPair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IShortingPair__factory>;
    getContractFactory(
      name: "IUniswapRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapRouter__factory>;
    getContractFactory(
      name: "AdvancedMockPancakeRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AdvancedMockPancakeRouter__factory>;
    getContractFactory(
      name: "MathUtilsCaller",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MathUtilsCaller__factory>;
    getContractFactory(
      name: "MockInterestStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockInterestStrategy__factory>;
    getContractFactory(
      name: "MockLiquidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockLiquidator__factory>;
    getContractFactory(
      name: "MockPancakeRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockPancakeRouter__factory>;
    getContractFactory(
      name: "MockParamGovernance",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockParamGovernance__factory>;
    getContractFactory(
      name: "MockPricedPancakeRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockPricedPancakeRouter__factory>;
    getContractFactory(
      name: "MockPriceGuard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockPriceGuard__factory>;
    getContractFactory(
      name: "MockReentrantSwapRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockReentrantSwapRouter__factory>;
    getContractFactory(
      name: "MockReentrantToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockReentrantToken__factory>;
    getContractFactory(
      name: "MockReserveLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockReserveLogic__factory>;
    getContractFactory(
      name: "MockToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockToken__factory>;
    getContractFactory(
      name: "MockTokenConverter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockTokenConverter__factory>;
    getContractFactory(
      name: "MockTokenWithFeeOnTransfer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockTokenWithFeeOnTransfer__factory>;
    getContractFactory(
      name: "PairFactoryNext",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PairFactoryNext__factory>;
    getContractFactory(
      name: "ShortingPairDeployerNext",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ShortingPairDeployerNext__factory>;
    getContractFactory(
      name: "ShortingPairNext",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ShortingPairNext__factory>;
    getContractFactory(
      name: "IPairExplorerV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPairExplorerV1__factory>;
    getContractFactory(
      name: "IPairFactoryV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPairFactoryV1__factory>;
    getContractFactory(
      name: "IPairV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPairV1__factory>;
    getContractFactory(
      name: "IParamProviderFactoryV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IParamProviderFactoryV1__factory>;
    getContractFactory(
      name: "IParamProviderV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IParamProviderV1__factory>;
    getContractFactory(
      name: "IReserveFactoryV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IReserveFactoryV1__factory>;
    getContractFactory(
      name: "IReserveV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IReserveV1__factory>;
    getContractFactory(
      name: "IRouterV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRouterV1__factory>;
    getContractFactory(
      name: "PairExplorerV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PairExplorerV1__factory>;
    getContractFactory(
      name: "PairFactoryStorageV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PairFactoryStorageV1__factory>;
    getContractFactory(
      name: "PairFactoryV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PairFactoryV1__factory>;
    getContractFactory(
      name: "PairStorageV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PairStorageV1__factory>;
    getContractFactory(
      name: "PairV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PairV1__factory>;
    getContractFactory(
      name: "ParamProviderFactoryStorageV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ParamProviderFactoryStorageV1__factory>;
    getContractFactory(
      name: "ParamProviderFactoryV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ParamProviderFactoryV1__factory>;
    getContractFactory(
      name: "ParamProviderStateV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ParamProviderStateV1__factory>;
    getContractFactory(
      name: "ParamProviderV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ParamProviderV1__factory>;
    getContractFactory(
      name: "ReserveFactoryStorageV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReserveFactoryStorageV1__factory>;
    getContractFactory(
      name: "ReserveFactoryV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReserveFactoryV1__factory>;
    getContractFactory(
      name: "ReserveStorageV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReserveStorageV1__factory>;
    getContractFactory(
      name: "ReserveV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReserveV1__factory>;
    getContractFactory(
      name: "RouterV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RouterV1__factory>;
    getContractFactory(
      name: "ERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Permit__factory>;
    getContractFactory(
      name: "AbstractPriceFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AbstractPriceFeed__factory>;
    getContractFactory(
      name: "AllowAnyPriceGuard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AllowAnyPriceGuard__factory>;
    getContractFactory(
      name: "ChainlinkPriceFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainlinkPriceFeed__factory>;
    getContractFactory(
      name: "IChainlinkFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChainlinkFeed__factory>;
    getContractFactory(
      name: "DiaPriceFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiaPriceFeed__factory>;
    getContractFactory(
      name: "IDiaOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiaOracle__factory>;
    getContractFactory(
      name: "IRevisioned",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRevisioned__factory>;
    getContractFactory(
      name: "NewPriceGuardFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NewPriceGuardFactory__factory>;
    getContractFactory(
      name: "NewPriceGuardFactoryStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NewPriceGuardFactoryStorage__factory>;
    getContractFactory(
      name: "PriceGuard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PriceGuard__factory>;
    getContractFactory(
      name: "PriceGuardFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PriceGuardFactory__factory>;
    getContractFactory(
      name: "PriceGuardFactoryStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PriceGuardFactoryStorage__factory>;
    getContractFactory(
      name: "IProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IProxy__factory>;
    getContractFactory(
      name: "Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Errors__factory>;
    getContractFactory(
      name: "Pair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pair__factory>;
    getContractFactory(
      name: "PairStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PairStorage__factory>;
    getContractFactory(
      name: "PairDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PairDeployer__factory>;
    getContractFactory(
      name: "IShortablePairBalance",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IShortablePairBalance__factory>;
    getContractFactory(
      name: "PairExplorer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PairExplorer__factory>;
    getContractFactory(
      name: "PairFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PairFactory__factory>;
    getContractFactory(
      name: "PairFactoryStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PairFactoryStorage__factory>;
    getContractFactory(
      name: "ParamProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ParamProvider__factory>;
    getContractFactory(
      name: "ParamProviderState",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ParamProviderState__factory>;
    getContractFactory(
      name: "ParamProviderFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ParamProviderFactory__factory>;
    getContractFactory(
      name: "ParamProviderFactoryStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ParamProviderFactoryStorage__factory>;
    getContractFactory(
      name: "ILendableProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILendableProvider__factory>;
    getContractFactory(
      name: "Referral",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Referral__factory>;
    getContractFactory(
      name: "ReferralStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReferralStorage__factory>;
    getContractFactory(
      name: "Reserve",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Reserve__factory>;
    getContractFactory(
      name: "ReserveStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReserveStorage__factory>;
    getContractFactory(
      name: "ReserveDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReserveDeployer__factory>;
    getContractFactory(
      name: "ReserveFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReserveFactory__factory>;
    getContractFactory(
      name: "ReserveFactoryStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReserveFactoryStorage__factory>;
    getContractFactory(
      name: "Router",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Router__factory>;
    getContractFactory(
      name: "RouterOld",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RouterOld__factory>;
    getContractFactory(
      name: "ShortingPair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ShortingPair__factory>;
    getContractFactory(
      name: "ShortingPairStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ShortingPairStorage__factory>;
    getContractFactory(
      name: "ShortingPairDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ShortingPairDeployer__factory>;
    getContractFactory(
      name: "IParamGovernance",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IParamGovernance__factory>;
    getContractFactory(
      name: "IVersioned",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVersioned__factory>;
    getContractFactory(
      name: "IxWOW",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IxWOW__factory>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
  }
}
