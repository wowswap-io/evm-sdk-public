/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GovernanceErrors,
  GovernanceErrorsInterface,
} from "../GovernanceErrors";

const _abi = [
  {
    inputs: [],
    name: "G_INCONSISTENT_FEE_DISTRIBUTION_DATA",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "G_INSUFFICIENT_XWOW_BALANCE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "G_INVALID_ADDRESS_PARAMETER",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "G_INVALID_PARAMETER",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "G_ONLY_XWOW_ALLOWED",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "G_VALUE_OUT_OF_BOUNDS",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "G_VOTING_IS_NOT_APPROVED",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INCONSISTENT_DATA",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INCONSISTENT_INITIALIZATION_DATA",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MATH_ADDITION_OVERFLOW",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MATH_DIVISION_BY_ZERO",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MATH_MULTIPLICATION_OVERFLOW",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "T_FEE_DISTRIBUTION_EXCEEDS_LIMITS",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "T_ONLY_XWOW_ALLOWED",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "T_UNABLE_TO_DISTRIBUTE_UNREGISTERED_TOKEN",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "T_UNABLE_TO_DISTRIBUTE_WOW",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "T_UNEXPECTED_TOKEN_BALANCE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "T_UNKNOWN_TOKEN",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "X_ACTIVE_STAKE_PERIOD",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "X_INVALID_STAKING_PERIOD",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "X_INVALID_XWOW_AMOUNT",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "X_NOT_STAKEABLE_TOKEN",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "X_NOT_TRANSFERABLE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "X_STAKING_PERIOD_DECREASE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x610802610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106101625760003560e01c80638a5d16f9116100cd578063db3383ec11610086578063db3383ec14610254578063eaebace01461026c578063f48f1fb314610274578063f616b1111461027c578063f90b93a914610284578063fc351a021461028c57610162565b80638a5d16f91461023c578063a8cc259f14610244578063ae62d4d51461024c578063c203b6fa14610254578063c43ac2451461025c578063cf85c9711461026457610162565b806351fdeef61161011f57806351fdeef61461020c578063696c70cf146102145780636caae9531461021c57806378679c44146102245780637cbf69f11461022c578063858a19e61461023457610162565b8063029d2344146101675780630f5ee482146101e457806313c06bcd146101ec57806335e99208146101f457806336f5e9a7146101fc5780634349e3d814610204575b600080fd5b61016f610294565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101a9578181015183820152602001610191565b50505050905090810190601f1680156101d65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61016f6102b3565b61016f6102d2565b61016f61030b565b61016f610327565b61016f610343565b61016f610362565b61016f61037e565b61016f6103b0565b61016f6103e9565b61016f610422565b61016f61045b565b61016f610494565b61016f6104c3565b61016f6104df565b61016f6104fb565b61016f610517565b61016f610550565b61016f61056c565b61016f6105a5565b61016f6105c1565b61016f6105fa565b61016f610627565b604051806040016040528060038152602001624d4d4f60e81b81525081565b604051806040016040528060038152602001624d414f60e81b81525081565b6040518060400160405280602081526020017f42616c616e6365206f6620746f6b656e206973206e6f7420657870656374656481525081565b6040518060600160405280602d8152602001610671602d913981565b6040518060600160405280602e8152602001610720602e913981565b6040518060400160405280600381526020016226a22d60e91b81525081565b60405180606001604052806030815260200161069e6030913981565b60405180604001604052806016815260200175159bdd1a5b99c81a5cc81b9bdd08185c1c1c9bdd995960521b81525081565b6040518060400160405280601c81526020017f556e61626c6520746f206469737472696275746520574f57206665650000000081525081565b6040518060400160405280601981526020017f496e73756666696369656e742078574f572062616c616e63650000000000000081525081565b6040518060400160405280601b81526020017f5374616b696e6720706572696f6420697320746f6f2073686f7274000000000081525081565b6040518060400160405280601a81526020017f50726f766964656420696e636f6e73697374656e74206461746100000000000081525081565b60405180604001604052806013815260200172125b9d985b1a59081e15d3d5c8185b5bdd5b9d606a1b81525081565b6040518060600160405280602981526020016106f76029913981565b6040518060600160405280602981526020016106ce6029913981565b6040518060600160405280602d8152602001610644602d913981565b6040518060400160405280601881526020017f78574f57206973206e6f74207472616e7366657261626c65000000000000000081525081565b6040518060600160405280602e815260200161079f602e913981565b6040518060400160405280602081526020017f506172616d657465722076616c7565206973206f7574206f6620626f756e647381525081565b6040518060600160405280602b8152602001610774602b913981565b6040518060400160405280601981526020017f50726f766964656420746f6b656e20697320756e6b6e6f776e0000000000000081525081565b6040518060400160405280601181526020017024b73b30b634b2103830b930b6b2ba32b960791b81525081565b60405180606001604052806026815260200161074e602691398156fe54686973206f7065726174696f6e206973206f6e6c7920616c6c6f77656420746f2078574f57206d696e746572556e61626c6520746f20756e7374616b652066756e647320647572696e67207374616b696e6720706572696f6446656520646973747269627574696f6e207265776172642073686f756c64206265206c657373207468616e203130302550726f766964656420696e636f6e73697374656e7420696e697469616c697a6174696f6e206461746150726f76696465642061646472657373206973206e6f742061207374616b6561626c6520746f6b656e546f74616c2066656520646973747269627574696f6e2073686f756c6420626520657175616c20746f20313030255374616b696e6720706572696f642073686f756c64206e6f7420626520646563726561736564556e61626c6520746f206469737472696275746520756e7265676973746572656420746f6b656e2066656550726f7669646564206e616d65206973206e6f7420612076616c6964206164647265737320706172616d65746572a2646970667358221220a64ec287cbc31e0e31e6310f47ca7f93ab4a51e0400680b0ddaf665fc41d0c2f64736f6c63430007040033";

export class GovernanceErrors__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GovernanceErrors> {
    return super.deploy(overrides || {}) as Promise<GovernanceErrors>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GovernanceErrors {
    return super.attach(address) as GovernanceErrors;
  }
  connect(signer: Signer): GovernanceErrors__factory {
    return super.connect(signer) as GovernanceErrors__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernanceErrorsInterface {
    return new utils.Interface(_abi) as GovernanceErrorsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GovernanceErrors {
    return new Contract(address, _abi, signerOrProvider) as GovernanceErrors;
  }
}
