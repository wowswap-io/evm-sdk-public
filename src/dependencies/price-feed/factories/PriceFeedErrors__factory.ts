/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PriceFeedErrors,
  PriceFeedErrorsInterface,
} from "../PriceFeedErrors";

const _abi = [
  {
    inputs: [],
    name: "MATH_ADDITION_OVERFLOW",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MATH_DIVISION_BY_ZERO",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MATH_MULTIPLICATION_OVERFLOW",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "P_DEVIATION_LIMIT_EXCEEDED",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "P_INSUFFICIENT_PRIVILEGES",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101fc610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100615760003560e01c8063029d2344146100665780630f5ee482146100845780632011a8cc1461008c5780634349e3d8146100945780638d1d62f71461009c575b600080fd5b61006e6100a4565b60405161007b9190610173565b60405180910390f35b61006e6100c3565b61006e6100e2565b61006e61011b565b61006e61013a565b604051806040016040528060038152602001624d4d4f60e81b81525081565b604051806040016040528060038152602001624d414f60e81b81525081565b6040518060400160405280601881526020017f446576696174696f6e206c696d6974206578636565646564000000000000000081525081565b6040518060400160405280600381526020016226a22d60e91b81525081565b6040518060400160405280601781526020017f496e73756666696369656e742070726976696c6567657300000000000000000081525081565b6000602080835283518082850152825b8181101561019f57858101830151858201604001528201610183565b818111156101b05783604083870101525b50601f01601f191692909201604001939250505056fea26469706673582212201790b55cddd088c494c54a92dcf44879a42f4fb51ecbe1814ae7265d5a7f32ce64736f6c63430007040033";

export class PriceFeedErrors__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PriceFeedErrors> {
    return super.deploy(overrides || {}) as Promise<PriceFeedErrors>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PriceFeedErrors {
    return super.attach(address) as PriceFeedErrors;
  }
  connect(signer: Signer): PriceFeedErrors__factory {
    return super.connect(signer) as PriceFeedErrors__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriceFeedErrorsInterface {
    return new utils.Interface(_abi) as PriceFeedErrorsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PriceFeedErrors {
    return new Contract(address, _abi, signerOrProvider) as PriceFeedErrors;
  }
}
