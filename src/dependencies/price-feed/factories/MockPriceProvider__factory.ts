/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockPriceProvider,
  MockPriceProviderInterface,
} from "../MockPriceProvider";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101cc806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806391b7f5ed1461003b578063d06ca61f14610050575b600080fd5b61004e6100493660046100c1565b610079565b005b61006361005e3660046100d9565b61007e565b6040516100709190610152565b60405180910390f35b600055565b6040805160028082526060808301845292602083019080368337019050509050600054816001815181106100ae57fe5b6020026020010181815250509392505050565b6000602082840312156100d2578081fd5b5035919050565b6000806000604084860312156100ed578182fd5b83359250602084013567ffffffffffffffff8082111561010b578384fd5b818601915086601f83011261011e578384fd5b81358181111561012c578485fd5b876020808302850101111561013f578485fd5b6020830194508093505050509250925092565b6020808252825182820181905260009190848201906040850190845b8181101561018a5783518352928401929184019160010161016e565b5090969550505050505056fea2646970667358221220018be3bebc182e3af8a68c2dd15068be13460f07bd17c29cfd992f1dda6fcb6864736f6c63430007040033";

export class MockPriceProvider__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockPriceProvider> {
    return super.deploy(overrides || {}) as Promise<MockPriceProvider>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockPriceProvider {
    return super.attach(address) as MockPriceProvider;
  }
  connect(signer: Signer): MockPriceProvider__factory {
    return super.connect(signer) as MockPriceProvider__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockPriceProviderInterface {
    return new utils.Interface(_abi) as MockPriceProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockPriceProvider {
    return new Contract(address, _abi, signerOrProvider) as MockPriceProvider;
  }
}
